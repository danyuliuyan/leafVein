<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="50112254-16f1-4b1d-8d95-c170cdb38757" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/extract_main_vein.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/drawGraph.py" beforeDir="false" afterPath="$PROJECT_DIR$/drawGraph.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageDataManager">
    <SUITE FILE_PATH="coverage/leafVein$drawGraph.coverage" NAME="drawGraph Coverage Results" MODIFIED="1546591900500" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/leafVein$extract_main_vein.coverage" NAME="extract_main_vein Coverage Results" MODIFIED="1546952159746" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-2104527103">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="15" />
          <entry key="project.open.time.1" value="1" />
          <entry key="project.open.time.13" value="1" />
          <entry key="project.open.time.18" value="1" />
          <entry key="project.open.time.19" value="4" />
          <entry key="project.open.time.20" value="1" />
          <entry key="project.open.time.21" value="4" />
          <entry key="project.open.time.22" value="1" />
          <entry key="project.open.time.28" value="1" />
          <entry key="project.open.time.6" value="2" />
          <entry key="project.open.time.8" value="1" />
          <entry key="project.opened" value="17" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="py" value="11" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="Python" value="11" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="py" value="11424" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Python" value="11424" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>100:</find>
      <find>, 100:</find>
      <find>, 52734:</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/drawGraph.py" />
        <option value="$PROJECT_DIR$/extract_main_vein.py" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="600" />
    <option name="y" value="64" />
    <option name="width" value="1287" />
    <option name="height" value="741" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes />
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="/media/zyp/移动硬盘/backup/PycharmProjects/Leaf_PDA" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="configurable.group.editor" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.extract_main_vein">
    <configuration name="drawGraph" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="leafVein" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/drawGraph.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="extract_main_vein" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="leafVein" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/extract_main_vein.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.drawGraph" />
      <item itemvalue="Python.extract_main_vein" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.extract_main_vein" />
        <item itemvalue="Python.drawGraph" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="50112254-16f1-4b1d-8d95-c170cdb38757" name="Default Changelist" comment="" />
      <created>1546338848483</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1546338848483</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="25" width="1920" height="1055" extended-state="6" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" weight="0.13680257" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32929516" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.49946353" weight="0.33370045" />
      <window_info anchor="bottom" id="Debug" order="3" sideWeight="0.49892703" weight="0.45594713" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="8" show_stripe_button="false" />
      <window_info anchor="bottom" id="Database Changes" order="9" show_stripe_button="false" />
      <window_info anchor="bottom" id="Event Log" order="10" sideWeight="0.50107294" side_tool="true" weight="0.45594713" />
      <window_info anchor="bottom" id="Terminal" order="11" weight="0.32929516" />
      <window_info anchor="bottom" id="Python Console" order="12" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" x="-385" y="590" width="1920" height="1023" id="SciView" order="3" weight="0.59603006" />
      <window_info anchor="right" id="Database" order="4" weight="0.3299356" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/drawGraph.py</url>
          <line>31</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/drawGraph.py</url>
          <line>35</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>221</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>98</line>
          <option name="timeStamp" value="43" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>128</line>
          <option name="timeStamp" value="59" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>111</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file:///usr/local/lib/python2.7/dist-packages/networkx/readwrite/nx_shp.py</url>
          <line>200</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>135</line>
          <option name="timeStamp" value="65" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>145</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>216</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>138</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>212</line>
          <option name="timeStamp" value="83" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>209</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>162</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>163</line>
          <option name="timeStamp" value="92" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>155</line>
          <option name="timeStamp" value="94" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>68</line>
          <option name="timeStamp" value="95" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>188</line>
          <option name="timeStamp" value="96" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/extract_main_vein.py</url>
          <line>195</line>
          <option name="timeStamp" value="97" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],4800-edge[0]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]
dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
plt.imshow(plt.imread('/home/zyp/network_extract_test/LDC001_images/LDC001_1_3_t_b/LDC001_1_3_t_b_orig.png'))
f.gca().plot(x,y, linewidth=3,color='r', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],4800-edge[0]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]
dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
f.gca().plot(x,y, linewidth=3,color='r', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],4800-edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]
dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
f.gca().plot(x,y, linewidth=3,color='r', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>y</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]
dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
f.gca().plot(x,y, linewidth=3,color='b', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]
dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
x = [edge[0]['x'] for edge in result]
y = [edge[0]['y'] for edge in result]
f.gca().plot(x,y, linewidth=1,color='b', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])
pointList = sorted(points,key=lambda point:point.x)
x = [point.x for point in pointList]
y = [point.y for point in pointList]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])
pointList = sorted(points,key=lambda point:point.x)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>points = []
for edge in result:
    points.extend([Point(edge[0]['x'],edge[0]['y']),Point(edge[1]['x'],edge[1]['y'])])</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>dpi = 600
figsize = (12, 12)
f = plt.figure(dpi=dpi, figsize=figsize)
plt.clf()
axes = f.gca()
axes.set_ylim([1, 4800])
axes.set_xlim([1, 6000])
x = [edge[0]['x'] for edge in result]
y = [edge[0]['y'] for edge in result]
f.gca().plot(x,y, linewidth=1,color='r', zorder=3)[0]
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$USER_HOME$/.local/lib/python2.7/site-packages/numpy/core/_methods.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="418">
          <caret line="29" lean-forward="true" selection-start-line="29" selection-end-line="29" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/lib/python2.7/encodings/utf_8.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="15" selection-start-line="15" selection-end-line="15" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/lib/python2.7/dist-packages/matplotlib/tight_layout.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="324" selection-start-line="324" selection-end-line="324" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/lib/python2.7/dist-packages/matplotlib/pyplot.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="199">
          <caret line="386" selection-start-line="386" selection-end-line="386" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/pydevd.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="161">
          <caret line="1067" selection-start-line="1067" selection-end-line="1067" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/lib/python2.7/dist-packages/networkx/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-932">
          <caret line="16" column="23" lean-forward="true" selection-start-line="16" selection-start-column="23" selection-end-line="16" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/lib/python2.7/dist-packages/networkx/readwrite/nx_shp.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3116">
          <caret line="164" column="28" selection-start-line="164" selection-start-column="28" selection-end-line="164" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/lib/python2.7/dist-packages/networkx/drawing/nx_pylab.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="708" column="18" lean-forward="true" selection-start-line="708" selection-start-column="18" selection-end-line="708" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/extract_main_vein.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="543">
          <caret line="98" column="17" lean-forward="true" selection-start-line="98" selection-start-column="17" selection-end-line="98" selection-end-column="17" />
          <folding>
            <element signature="e#41#62#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/drawGraph.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="808">
          <caret line="87" column="100" selection-start-line="87" selection-start-column="100" selection-end-line="87" selection-end-column="100" />
          <folding>
            <element signature="e#40#61#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>